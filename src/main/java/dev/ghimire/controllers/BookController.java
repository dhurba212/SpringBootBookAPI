package dev.ghimire.controllers;


import dev.ghimire.aspects.Authorized;
import dev.ghimire.entities.Book;
import dev.ghimire.services.BookService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Set;

@Component
@Controller//tells spring to read the methods in this class to generate a controller bean
//controller is designed to return a view not a JSON string
//this is a holdover of Spring being used for server side rendering(server sends back html)
@RestController//automatically appends @ResponseBody to all methods, so u can delete ResponseBody or leave it as it is
public class BookController {
    @Autowired//will find any bean either autogenerated or custom beans
    BookService bookService;

    //Spring will create a get route using that path
    //Spring will automatically convert any returns in JSON for u.
   @Authorized
    @GetMapping("/books")
    @ResponseBody//
    public Set<Book> retrieveAllBooks(){
        Set<Book> books = this.bookService.getAllBooks();
        return books;
    }

    @Authorized
    @GetMapping("/books/{id}")
    @ResponseBody
    public Book getBookById(@PathVariable int id){
        Book book = this.bookService.getBookById(id);
        return book;

    }

    @Authorized
    @PostMapping("/books")
    @ResponseBody
    public Book createBook(@RequestBody Book book)//spring will automatically read the json in body and turn it into Java Object
    {
        this.bookService.registerBook(book);
        return book;
    }

    @Authorized
    @PutMapping("/books/{id}")
    @ResponseBody
    public Book updateBook(@PathVariable int id,@RequestBody Book book){
        book.setBookId(id);
        this.bookService.updateBook(book);
        return book;
    }

    @Authorized
    @DeleteMapping("/books/{id}")
    @ResponseBody
    public boolean deleteBookById(@PathVariable int id){// in spring u cannot return primitives
        Boolean result = this.bookService.deleteBookById(id);
        return result;
    }


}
